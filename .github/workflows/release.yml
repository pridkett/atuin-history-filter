name: Release

on:
  push:
    tags:
      - 'v*.*.*'

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        goos: [linux, windows, darwin]
        goarch: [amd64, arm64, arm]
        goarm: [7]
        exclude:
          - goos: darwin
            goarch: arm
          - goos: windows
            goarch: arm
    permissions:
      contents: write
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version: '1.24'

      - name: Set GO environment
        run: |
          echo "GOOS=${{ matrix.goos }}" >> $GITHUB_ENV
          echo "GOARCH=${{ matrix.goarch }}" >> $GITHUB_ENV
          if [ "${{ matrix.goarch }}" = "arm" ]; then
            echo "GOARM=${{ matrix.goarm }}" >> $GITHUB_ENV
          fi

      - name: Build artifacts
        uses: goreleaser/goreleaser-action@v4
        with:
          version: latest
          args: build --clean --snapshot
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  publish:
    needs: build
    runs-on: ubuntu-latest
    permissions:
      contents: write
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Publish release
        uses: goreleaser/goreleaser-action@v4
        with:
          version: latest
          args: release --skip-build --skip-clean
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
